Tema 1 IDP

Echipa WizKids
Mihai Ciocan 342C3
Racec Emil 341C3

In implementarea temei am urmat design pattern-ul Mediator. Componentele care se cupleaza la obiectul
Mediator sunt GUI - Main, table-ul care afiseaza informatii despre transferuri si statusbar-ul ce 
afiseaza informatii despre transferuri in format text in partea de jos a aplicatiei (in dezvoltarea
aplicatiei vor mai aparea noi componente).

Graphical User Interface

Interfata grafica este formata din 3 panel-uri: 
	- lista cu utilizatori in partea dreapta;
	- panel in dreapta care e impartit in:
		- lista cu fisiere ce apartin utilizator-ului selectat(din partea dreapta);
		- table cu informatii despre transferuri(sursa, destinatie, nume fisier, progress, status);
		
Testing
Pentru testare am realizat:
	- junit tests pentru testare citirii fisierului de configurare (pe parcursul dezvoltarii 
	vor mai fi adaugate teste)
	- TestGUI pentru testare interfata grafica folosind un mockup mediator ce simuleaza un mediator
	complet implementat: updateaza grafica la transfer simulat, introduce noi evenimente de adaugare 
	utilizator, sau update pentru lista de fisiere a unui utilizator 
	 
	 
Tema 2 IDP

Transferul fisierelor intre clienti se realizeaza prin api-ul nio. Practic fiecare client deschide un SocketServerChannel,
care asculta pe un anumit port conexiuni de la ceilalti. Acesta este non-blocant iar evenimentele sunt procesate printr-un
selector. La acceptarea unei conexiuni, se creeaza un obiect de tipul RequestedFileInfo care retine starile unui transfer de
fisiere. La client starile sunt retinute in FileDownloaderWorker care face receptia fisierului intr-un thread in background.

Alte resurse:
La compilare se deschid 3 instante la delay de 3s. Exista 3 useri: bugs, duffy si sam, iar fiecare are 3 fisiere. 


Tema 3 IDP

Pentru tema 3 am implementat un Servlet Web care proceseaza cereri de la client. Acesta proceseaza cereri de tipul:
	: request users - trimite lista de user catre client
	: request user files - trimite lista de fisiere a unui client
	: remove user - sterge un utilizator din lista
	: update user files - updateaza fisierele unui client
Serverul Web retine informatii despre utilizatori precum adresa, portul si fisierele sale. El primeste request-uri de
tip post de la client acestea fiind mai secure decat cele get;


Clientul va trimite la initializare un mesaj de tip post cu numele sau si fisierele pe care le share-uieste cu ceilalti.
Acesta poate updata lista sa de clienti folosind butonul de refresh.

De asemenea acesta face request de fiecare data cand selecteaza un utilizator, pentru a primi lista de fisiere updatata.
Clientul trimite o cerere de stergere a propriului utilizator atunci cand inchide aplicatia, pentru ca ceilalti clienti
sa fie notificati de deconectarea unui utilizator.

	